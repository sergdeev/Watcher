{"version":3,"sources":["api/api.js","components/HOC/AppContextHOC.jsx","components/Header/Login/LoginForm.jsx","components/Header/Login/Login.jsx","components/Header/UserMenu.jsx","components/Header/Header.jsx","components/Filters/SortBy.jsx","components/Filters/Pagination.jsx","components/Filters/PrimaryReleaseYear.jsx","components/Filters/Genres.jsx","components/Filters/Filters.jsx","components/UIComponents/UIIcon.jsx","components/HOC/AddMovieToListHOC.jsx","components/Movies/Favorites.jsx","components/Movies/WatchList.jsx","components/Movies/MovieItem.jsx","components/Movies/MoviesList.jsx","components/HOC/MoviesHOC.jsx","components/pages/MoviesPage/MoviesPage.jsx","components/Movies/Movie/MovieInfo.jsx","components/Movies/Movie/MovieTab.jsx","components/Movies/Movie/MovieDetail.jsx","components/Movies/Movie/MovieVideos.jsx","components/Movies/Movie/MovieCredits.jsx","components/pages/MoviePage/MoviePage.jsx","components/App.jsx","index.js"],"names":["API_URL","API_KEY_3","fetchApi","url","options","arguments","length","undefined","Promise","resolve","reject","fetch","then","response","status","json","data","catch","error","CallApi","_options$params","params","queryStringParams","Object","objectSpread","api_key","language","concat","queryString","stringify","mode","headers","Content-type","_options$params2","_options$body","body","method","JSON","AppContextHOC","Component","_React$Component","ContextHOC","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","_this","react_default","a","createElement","AppContext","Consumer","context","assign","props","React","LoginForm","call","onChange","event","name","target","setState","prevState","_ref","defineProperty","errors","base","handleBlur","validateFields","keys","state","username","password","repeatPassword","onSubmit","submitting","get","post","request_token","updateSessionId","session_id","user","updateUser","console","log","status_message","onLogin","preventDefault","_this$state","className","htmlFor","type","id","placeholder","onBlur","onClick","disabled","Login","toggleModal","bind","assertThisInitialized","showModal","reactstrap_es","isOpen","toggle","Login_LoginForm","UserMenu","toggleDropdown","dropdownOpen","handleLogOut","onLogOut","tag","data-toggle","alt","src","avatar","gravatar","hash","right","Header","Link","to","Header_UserMenu","Header_Login_Login","SortBy","_this$props","sort_by","onChangeFilters","map","item","label","PureComponent","defaultProps","Pagination","page","total_pages","onChangePage","PrimaryReleaseYear","primary_release_year","Genres","checked","toConsumableArray","with_genres","filter","genre","resetGenres","genresList","_this2","link","genres","_this3","includes","String","Filters","_this$props$filters","filters","SortBy_SortBy","PrimaryReleaseYear_PrimaryReleaseYear","Genres_Genres","Pagination_Pagination","UIIcon","iconName","isAdded","iconStyle","isLiked","index_es","icon","HOC_AddMovieToListHOC","AddMovieToListHOC","addFavorite","showToggleModal","media_type","media_id","UIComponents_UIIcon","MovieItem","style","width","backdrop_path","poster_path","title","vote_average","Movies_Favorites","Movies_WatchList","MoviesList","movies","movie","MovieItem_MovieItem","MoviesHOC","getMovies","join","results","getTotalPages","prevProps","MoviesPage","onClearFilters","Filters_Filters","Movies_MoviesList","MovieInfo","_this$props$movie","overview","background","MovieTab","tabs","NavLink","MovieDetail","original_title","production_companies","production_countries","budget","release_data","original_language","revenue","country","company","color","MovieVideos","movieVideos","movie_id","match","video","left","href","height","frameBorder","allowFullScreen","heading","MovieCredits","movieCredits","cast","credit","profile_path","margin","MoviePage","MovieInfo_MovieInfo","MovieTab_MovieTab","Switch","Route","exact","path","render","propsRouter","MovieDetail_MovieDetail","component","cookies","Cookies","createContext","library","add","fas","far","App","set","maxAge","remove","getFavoriteMovies","favMoviesID","push","favoriteMovies","watchMoviesID","watchList","showLoginModal","_this$state2","BrowserRouter","Provider","components_Header_Header","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.aa1627d5.chunk.js","sourcesContent":["import queryString from \"query-string\";\n\nexport const API_URL = \"https://api.themoviedb.org/3\";\n\nexport const API_KEY_3 = \"82e907ae230e3979723f46972af5c31d\";\n\nexport const API_KEY_4 =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4MmU5MDdhZTIzMGUzOTc5NzIzZjQ2OTcyYWY1YzMxZCIsInN1YiI6IjViZjg0MzVjMGUwYTI2MjY3NDBmYTIxMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wwjNTtEgVE7xgYtBwLFK7Kw8wDaYeh4-DtUP56n7mzY\";\n\n\n  export const fetchApi = (url, options = {}) => {\n      return new Promise((resolve, reject) => {\n          fetch(url, options)\n              .then(response => {\n                  if(response.status < 400){\n                      return response.json();\n                  } else{\n                      throw response;\n                  }\n              })\n              .then(data => {\n                  resolve(data);\n                  }).catch(response => {\n                  response.json().then(error => {\n                      reject(error);\n                  })\n              })\n\n      })\n  };\n\n\nexport default class CallApi {\n    static get(url, options = {}){\n        const { params = {} } = options;\n        const queryStringParams = {\n            api_key: API_KEY_3,\n            language: \"ru-RU\",\n            ...params\n        };\n        return fetchApi(\n            `${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\n            {\n                mode: \"cors\",\n                headers: {\n                    \"Content-type\": \"application/json\"\n                }\n            });\n        };\n        \n    static post(url, options = {}) {\n        const { params = {}, body = {} } = options;\n        const queryStringParams = {\n            api_key: API_KEY_3,\n            language: \"ru-RU\",\n            ...params\n        };\n        return fetchApi(\n            `${API_URL}${url}?${queryString.stringify(queryStringParams)}`,\n            {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify(body)\n            });\n        }\n\n};\n\n","import React from \"react\";\r\nimport { AppContext } from \"../App\"\r\n\r\n\r\nexport default Component => class ContextHOC extends React.Component {\r\n    render(){\r\n        return <AppContext.Consumer>\r\n        {\r\n            (context) => (\r\n                <Component \r\n                    {...this.props}\r\n                    {...context}\r\n                />\r\n            )\r\n        }\r\n        </AppContext.Consumer>\r\n    }\r\n    \r\n};\r\n","import React, {Component} from \"react\";\r\nimport CallApi from \"../../../api/api\";\r\n\r\n\r\nimport AppContextHOC from \"../../HOC/AppContextHOC\"\r\n\r\nclass LoginForm extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            repeatPassword: \"\",\r\n            errors: {},\r\n            submitting: false\r\n        }\r\n    }\r\n\r\n\r\n    onChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState(prevState => ({\r\n            [name]: value,\r\n            errors: {\r\n                ...prevState.errors,\r\n                base: false,\r\n                [name]: null\r\n            }\r\n        }));\r\n    };\r\n\r\n\r\n\r\n    handleBlur = () => {\r\n        const errors = this.validateFields();\r\n        if(Object.keys(errors).length > 0){\r\n            this.setState(prevState => ({\r\n                errors: {\r\n                    ...prevState.errors,\r\n                    ...errors\r\n                }\r\n            }))\r\n        }\r\n    }\r\n\r\n\r\n    validateFields = () => {\r\n        const errors = {};\r\n        if(this.state.username === \"\") {\r\n            errors.username = \"Not empty\";\r\n        };\r\n        if(this.state.password.length < 5){\r\n            errors.password = \"Password must be at least 5 character\";\r\n        };\r\n        if(this.state.repeatPassword !== this.state.password){\r\n            errors.repeatPassword = \"Password must be the same\";\r\n        }\r\n        return errors;\r\n    };\r\n\r\n\r\n    onSubmit = () => {\r\n        //const linkRequestToken = `${API_URL}/authentication/token/new?api_key=${API_KEY_3}`;\r\n        //const linkCreateSessionWithLogin = `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`;\r\n        //const linkCreateSession = `${API_URL}/authentication/session/new?api_key=${API_KEY_3}`;\r\n\r\n        this.setState({\r\n            submitting: true\r\n        });\r\n\r\n        CallApi.get(\"/authentication/token/new\")\r\n            .then(data => {\r\n                return CallApi.post(\"/authentication/token/validate_with_login\", {\r\n                    body: {\r\n                        username: this.state.username,\r\n                        password: this.state.password,\r\n                        request_token: data.request_token\r\n                    }\r\n                });\r\n            })\r\n            .then(data => {\r\n                return CallApi.post(\"/authentication/session/new\", {\r\n                    body: {\r\n                        request_token: data.request_token\r\n                    }\r\n                });\r\n            })\r\n            .then(data => {\r\n                this.props.updateSessionId(data.session_id);\r\n                return CallApi.get(\"/account\", {\r\n                    params: {\r\n                        session_id: data.session_id\r\n                    }\r\n                });\r\n            })\r\n            .then(user => {\r\n                this.setState(\r\n                    {\r\n                        submitting: false\r\n                    },\r\n                    () => {\r\n                        this.props.updateUser(user);\r\n                    }\r\n                );\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error\", error);\r\n                this.setState({\r\n                    submitting: false,\r\n                    errors: {\r\n                        base: error.status_message\r\n                    }\r\n                });\r\n            });\r\n    };          \r\n\r\n\r\n    onLogin = event => {\r\n        event.preventDefault();\r\n        const errors = this.validateFields();\r\n        if(Object.keys(errors).length > 0){\r\n            this.setState(prevState => ({\r\n                errors: {\r\n                    ...prevState.errors,\r\n                    ...errors\r\n                }\r\n            }))\r\n        } else {\r\n            this.onSubmit();\r\n        }\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { username, password, repeatPassword, errors, submitting } = this.state;\r\n        return (\r\n            <div className=\"form-login-container\">\r\n                <form className=\"form-login\">\r\n                    <h1 className=\"h3 mb-3 font-weight-normal text-center\">\r\n                      Авторизация apitarakan1972\r\n                    </h1>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Пользователь</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={errors.username? \"form-control invalid\" : \"form-control\"}\r\n                            id=\"username\"\r\n                            placeholder=\"Пользователь\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={this.onChange}\r\n                            onBlur={this.handleBlur}\r\n                          />\r\n                          {errors.username && (\r\n                            <div className=\"invalid-feedback\">{errors.username}</div>\r\n                          )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Пароль</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className={errors.password? \"form-control invalid\" : \"form-control\"}\r\n                            id=\"password\"\r\n                            placeholder=\"Пароль\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={this.onChange}\r\n                            />\r\n                        {errors.password && (\r\n                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"repeatPassword\">Повторите пароль</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className={errors.repeatPassword? \"form-control invalid\" : \"form-control\"}\r\n                            id=\"repeatPassword\"\r\n                            placeholder=\"Повторите пароль\"\r\n                            name=\"repeatPassword\"\r\n                            value={repeatPassword}\r\n                            onChange={this.onChange}\r\n                            />\r\n                        {errors.repeatPassword && (\r\n                        <div className=\"invalid-feedback\">{errors.repeatPassword}</div>\r\n                        )}\r\n                    </div>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-lg btn-outline-dark btn-block\"\r\n                        onClick={this.onLogin}\r\n                        disabled={submitting}\r\n                        >\r\n                        Вход\r\n                    </button>\r\n                    {errors.base && (\r\n                        <div className=\"invalid-feedback text-center\">{errors.base}</div>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AppContextHOC(LoginForm);\r\n\r\n","import React, { Component } from 'react';\r\n// import { API_URL, API_KEY_3 } from \"../../../api/api\";\r\nimport { Modal, ModalBody } from 'reactstrap';\r\nimport LoginForm from \"./LoginForm\"\r\n\r\n\r\n//`${API_URL}/authentication/token/new?api_key=${API_KEY_3}`\r\n//`${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`\r\n//`${API_URL}/authentication/session/new?api_key=${API_KEY_3}`\r\n\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.state = {\r\n            showModal: false\r\n        };\r\n\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState(prevState => ({\r\n            showModal: !prevState.showModal\r\n        }));\r\n    }\r\n\r\n\r\n    // sendPromises = () => {\r\n    //     const linkRequestToken = `${API_URL}/authentication/token/new?api_key=${API_KEY_3}`;\r\n    //     const linkCreateSessionWithLogin = `${API_URL}/authentication/token/validate_with_login?api_key=${API_KEY_3}`;\r\n    //     const linkCreateSession = `${API_URL}/authentication/session/new?api_key=${API_KEY_3}`;\r\n    //\r\n    //     const fetchApi = (url, options = {}) => {\r\n    //         return new Promise((resolve, reject) => {\r\n    //             fetch(url, options)\r\n    //                 .then(response => {\r\n    //                     if(response.status < 400){\r\n    //                         return response.json();\r\n    //                     } else{\r\n    //                         throw response;\r\n    //                     }\r\n    //                 })\r\n    //                 .then(data => {\r\n    //                     resolve(data);\r\n    //                     }).catch(response => {\r\n    //                     response.json().then(error => {\r\n    //                         reject(error);\r\n    //                     })\r\n    //                 })\r\n    //\r\n    //         })\r\n    //     };\r\n    //\r\n    //     fetchApi(linkRequestToken)\r\n    //     .then(data => {\r\n    //         console.log(\"data\",data);\r\n    //         return fetchApi(linkCreateSessionWithLogin,{\r\n    //                     method: \"POST\",\r\n    //                     mode: \"cors\",\r\n    //                     headers: {\r\n    //                         \"Content-type\": \"application/json\"\r\n    //                     },\r\n    //                     body: JSON.stringify({\r\n    //                             username: \"sergluka\",\r\n    //                             password: \"apitarakan1972\",\r\n    //                             request_token: data.request_token\r\n    //                         })\r\n    //                 })\r\n    //         })\r\n    //         .then(data => {\r\n    //             console.log(\"succes\",data);\r\n    //             fetchApi(linkCreateSession, {\r\n    //                 method: \"POST\",\r\n    //                 mode: \"cors\",\r\n    //                 headers: {\r\n    //                     \"Content-type\": \"application/json\"\r\n    //                 },\r\n    //                 body: JSON.stringify({\r\n    //                     request_token: data.request_token\r\n    //                 })\r\n    //             }\r\n    //             )\r\n    //         })\r\n    //         .then(data => {\r\n    //             console.log(\"session\", data);\r\n    //         })\r\n    //         .catch(error => console.log(\"error\", error));\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n        //---2-----\r\n        // const getRequestToken = () => {\r\n        //     return new Promise((resolve, reject) => {\r\n        //         fetch(linkRequestToken)\r\n        //             .then(response => {\r\n        //                 if(response.status < 400){\r\n        //                     return response.json();\r\n        //                 } else{\r\n        //                     throw response;\r\n        //                 }\r\n        //             })\r\n        //             .then(data => {\r\n        //                 resolve(data);\r\n        //                 }).catch(response => {\r\n        //                 response.json().then(error => {\r\n        //                     reject(error);\r\n        //                 })\r\n        //             })\r\n        //\r\n        //     })\r\n        // }\r\n        //\r\n        // const validateWithLogin = body => {\r\n        //     return new Promise((resolve, reject) => {\r\n        //         fetch(linkCreateSessionWithLogin,{\r\n        //                     method: \"POST\",\r\n        //                     mode: \"cors\",\r\n        //                     headers: {\r\n        //                         \"Content-type\": \"application/json\"\r\n        //                     },\r\n        //                     body: JSON.stringify(body)\r\n        //                 })\r\n        //             .then(response => {\r\n        //                 if(response.status < 400){\r\n        //                     return response.json();\r\n        //                 } else{\r\n        //                     throw response;\r\n        //                 }\r\n        //             })\r\n        //             .then(data => {\r\n        //                 resolve(data);\r\n        //                 })\r\n        //                 .catch(response => {\r\n        //                 response.json().then(error => {\r\n        //                     reject(error);\r\n        //                 })\r\n        //             })\r\n        //\r\n        //     })\r\n        // }\r\n        //\r\n        // getRequestToken()\r\n        // .then(data => {\r\n        //     console.log(\"data\",data);\r\n        //     return validateWithLogin({\r\n        //                     username: \"serglukas\",\r\n        //                     password: \"apitarakan1972\",\r\n        //                     request_token: data.request_token\r\n        //                 })\r\n        //     })\r\n        //     .then(data => console.log(\"succes\",data))\r\n        //     .catch(error => console.log(\"error\", error));\r\n\r\n\r\n        //---1---\r\n        // fetch(linkRequestToken)\r\n        //     .then(response => response.json())\r\n        //     .then(data => {\r\n        //         //console.log(data);\r\n        //         //2\r\n        //         fetch(linkCreateSessionWithLogin, {\r\n        //             method: \"POST\",\r\n        //             mode: \"cors\",\r\n        //             headers: {\r\n        //                 \"Content-type\": \"application/json\"\r\n        //             },\r\n        //             body: JSON.stringify({\r\n        //                 username: \"sergluka\",\r\n        //                 password: \"apitarakan1972\",\r\n        //                 request_token: data.request_token\r\n        //             })\r\n        //         })\r\n        //             .then(response => response.json()).then(data => {\r\n        //                 //console.log(data);\r\n        //                 //3\r\n        //                 fetch(linkCreateSession, {\r\n        //                     method: \"POST\",\r\n        //                     mode: \"cors\",\r\n        //                     headers: {\r\n        //                         \"Content-type\": \"application/json\"\r\n        //                     },\r\n        //                     body: JSON.stringify({\r\n        //                         request_token: data.request_token\r\n        //                     })\r\n        //                 })\r\n        //                 .then(response => response.json()).then(data => console.log(\"session\", data))\r\n        //             });\r\n        //     })\r\n    // };\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"container\">\r\n                    <button\r\n                        className = \"btn btn-outline-light\"\r\n                        type=\"button\"\r\n                        onClick={this.toggleModal}>\r\n                        Login\r\n                    </button>\r\n                    <Modal isOpen={this.state.showModal} toggle={this.toggleModal}>\r\n                        <ModalBody>\r\n                            <LoginForm />\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Login;\r\n","import React, {Component} from \"react\";\r\nimport {\r\n    Dropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem\r\n  } from \"reactstrap\";\r\nimport { fetchApi, API_URL, API_KEY_3 } from \"../../api/api\";\r\nimport AppContextHOC from \"../HOC/AppContextHOC\"\r\n\r\nclass UserMenu extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            dropdownOpen: false\r\n        }\r\n    }\r\n\r\n    toggleDropdown = () => {\r\n        this.setState(prevState => ({\r\n            dropdownOpen: !prevState.dropdownOpen \r\n        }));\r\n      }\r\n    \r\n\r\n      handleLogOut = () => {\r\n        fetchApi(`${API_URL}/authentication/session?api_key=${API_KEY_3}`,{\r\n            method: \"DELETE\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                session_id: this.props.session_id\r\n            })\r\n        })\r\n        .then(() => {\r\n            this.props.onLogOut();  \r\n        })\r\n      }\r\n\r\n\r\n    render(){\r\n        const { user } = this.props;\r\n        return (\r\n            <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown}>\r\n                <DropdownToggle\r\n                    tag=\"div\"\r\n                    onClick={this.toggleDropdown}\r\n                    data-toggle=\"dropdown\">\r\n                    <img \r\n                        alt=\"\"\r\n                        className=\"rounded-circle\" \r\n                        src = {`https://secure.gravatar.com/avatar/${user.avatar.gravatar.hash}.jpg?s=44`}\r\n                        onClick={this.toggleDropdown}\r\n                    />\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                    <DropdownItem onClick={this.handleLogOut}>Выйти</DropdownItem>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default AppContextHOC(UserMenu);","import React, { Component } from 'react';\r\nimport Login from \"./Login/Login\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Header extends Component {\r\n    render(){\r\n        const { user } = this.props;\r\n        return(\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n                <div className=\"container\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link to={\"/\"} className=\"nav-link\">Home</Link>\r\n                        </li>\r\n                    </ul>\r\n                    {user?\r\n                        <UserMenu />:\r\n                        <Login/>\r\n                    }\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class SortBy extends React.PureComponent{\r\n    static propTypes = {\r\n        sort_by: PropTypes.string.isRequired,\r\n        onChangeFilters: PropTypes.func.isRequired\r\n    };\r\n    static defaultProps = {\r\n        options: [\r\n            {\r\n                label: 'Популярные по убыванию',\r\n                value: \"popularity.desc\"},\r\n            {\r\n                label: 'Популярные по возростанию',\r\n                value: 'popularity.asc'},\r\n            {\r\n                label: 'Рейтинг по убыванию',\r\n                value: 'vote_average.desc'},\r\n            {\r\n                label: 'Рейтинг по возростанию',\r\n                value: 'vote_average.asc'}\r\n        ]\r\n    }\r\n    render(){\r\n        const {\r\n            sort_by,\r\n            onChangeFilters,\r\n            options\r\n        } = this.props;\r\n        return(\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"sort_by\">Сортировать по:</label>\r\n              <select\r\n                  id=\"sort_by\"\r\n                  className=\"form-control\"\r\n                  name=\"sort_by\"\r\n                  value={sort_by}\r\n                  onChange={onChangeFilters}\r\n                  >\r\n                  {options.map(item => {\r\n                      return(\r\n                          <option value={item.value} key={item.value}>{item.label}</option>\r\n                      )\r\n                  })}\r\n              </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nexport default class Pagination extends Component{\r\n\r\n    render(){\r\n        const {\r\n            page,\r\n            total_pages,\r\n            onChangePage\r\n        } = this.props;\r\n        return(\r\n            <div>\r\n                <div className=\"btn-group d-flex justify-content-center\">\r\n                    <button type=\"button\" className=\"btn btn-light\"\r\n                        disabled = {page === 1}\r\n                        onClick = {() => {onChangePage(page - 1)}}>\r\n                        Назад\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn btn-light\"\r\n                        onClick = {() => {onChangePage(page + 1)}}>\r\n                        Вперед\r\n                    </button>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    {page} из {total_pages}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default class PrimaryReleaseYear extends React.PureComponent{\r\n    static defaultProps = {\r\n        options: [\r\n            {\r\n                label: \"2018\",\r\n                value: \"2018\"\r\n            },\r\n            {\r\n                label: \"2017\",\r\n                value: \"2017\"\r\n            },\r\n            {\r\n                label: \"2016\",\r\n                value: \"2016\"\r\n            },\r\n            {\r\n                label: \"2015\",\r\n                value: \"2015\"\r\n            }\r\n        ]\r\n    };\r\n\r\n\r\n\r\n    render(){\r\n        const {\r\n            options,\r\n            onChangeFilters,\r\n            primary_release_year\r\n        } = this.props;\r\n        return(\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"primary_release_year\">Год релиза:</label>\r\n                <select\r\n                    id=\"primary_release_year\"\r\n                    className=\"form-control\"\r\n                    name=\"primary_release_year\"\r\n                    value={primary_release_year}\r\n                    onChange={onChangeFilters}\r\n                    >\r\n                    {options.map(item => {\r\n                        return(\r\n                            <option value={item.value} key={item.value}>{item.label}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { API_URL, API_KEY_3 } from \"../../api/api\";\r\n\r\nexport default class Genres extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      genresList: []\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n      const link = `${API_URL}/genre/movie/list?api_key=${API_KEY_3}&language=ru-RU`;\r\n      fetch(link)\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            this.setState({\r\n                genresList: data.genres\r\n            });\r\n        });\r\n  }\r\n\r\n\r\n    onChange = event =>{\r\n        console.log(event.target.checked);\r\n        this.props.onChangeFilters({\r\n            target: {\r\n            name: \"with_genres\",\r\n            value: event.target.checked\r\n                ? [...this.props.with_genres, event.target.value]\r\n                : this.props.with_genres.filter(genre => genre !== event.target.value)\r\n            } \r\n        });\r\n    }\r\n\r\n\r\n  resetGenres = event => {\r\n      this.props.onChangeFilters({\r\n          target: {\r\n              name: \"with_genres\",\r\n              value: []\r\n          }\r\n      });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { genresList } = this.state;\r\n    const { with_genres } = this.props;\r\n    console.log(with_genres);\r\n    return (\r\n      <div>\r\n        <button\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n            onClick={this.resetGenres}\r\n            >\r\n            Показать все жанры\r\n        </button>\r\n      {\r\n          genresList.map(genre => (\r\n              <div key={genre.id} className=\"form-check\">\r\n                  <input\r\n                      className=\"form-check-input\"\r\n                      type=\"checkbox\"\r\n                      value={genre.id}\r\n                      id={`genre${genre.id}`}\r\n                      onChange={this.onChange}\r\n                      checked={with_genres.includes(String(genre.id))}\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor={`genre${genre.id}`}>\r\n                      {genre.name}\r\n                  </label>\r\n              </div>\r\n          ))\r\n      }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport SortBy from './SortBy.jsx';\nimport Pagination from './Pagination.jsx';\nimport PrimaryReleaseYear from './PrimaryReleaseYear.jsx';\nimport Genres from './Genres.jsx';\n\n\nexport default class Filters extends React.Component {\n  render() {\n      const {\n          filters: { sort_by, primary_release_year, with_genres },\n          total_pages,\n          onChangeFilters,\n          page,\n          onChangePage\n      } = this.props;\n      return (\n        <form className=\"mb-3\">\n            <SortBy onChangeFilters={onChangeFilters} sort_by ={sort_by}/>\n            <PrimaryReleaseYear onChangeFilters={onChangeFilters} primary_release_year={primary_release_year}/>\n            <Genres onChangeFilters={onChangeFilters} with_genres={with_genres}/>\n            <Pagination page={page} onChangePage={onChangePage} total_pages={total_pages}/>\n        </form>\n      );\n  }\n}\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst UIIcon = ({ iconName, onClick, isAdded, isLiked }) => {\r\n  const iconStyle = isAdded ? \"fas\" : \"far\";\r\n  return <FontAwesomeIcon icon={[iconStyle, iconName]} onClick={onClick} className=\"icon\"/>;\r\n};\r\n\r\nexport default UIIcon;","import React from 'react'\r\nimport CallApi from \"../../api/api\"\r\n\r\nexport default (Component, type, name) => class AddMovieToListHOC extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isAdded: props[type].includes(props.item.id)\r\n        }\r\n    }\r\n\r\n    addFavorite = () => {\r\n        const { user, item, session_id, showToggleModal } = this.props;\r\n        if(!session_id){\r\n            showToggleModal();\r\n        } else{\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                isAdded: !prevState.isAdded\r\n            }), () =>\r\n                CallApi.post(`/account/${user.id}/${[name]}`, {\r\n                    params: {\r\n                        session_id: session_id\r\n                    },\r\n                    body: {\r\n                        media_type: \"movie\",\r\n                        media_id: item.id,\r\n                        [name]: this.state.isAdded\r\n                    }\r\n                })\r\n            );\r\n        }\r\n    };\r\n\r\n        render(){\r\n            const { isAdded } = this.state;\r\n            return (\r\n                <Component isAdded={isAdded} addFavorite={this.addFavorite} />\r\n            );\r\n        }\r\n    }\r\n","import React from 'react'\r\nimport UIIcon from '../UIComponents/UIIcon'\r\nimport AppContextHOC from \"../HOC/AppContextHOC\";\r\nimport AddMovieToListHOC from \"../HOC/AddMovieToListHOC\"\r\n\r\nconst Favorites = ({ isAdded, addFavorite }) => {\r\n        return(\r\n            <UIIcon\r\n                iconName={\"heart\"}\r\n                onClick={addFavorite}\r\n                isAdded={isAdded}\r\n                />\r\n        );  \r\n}\r\n\r\n\r\n\r\nexport default AppContextHOC(AddMovieToListHOC(Favorites, \"favoriteMovies\", \"favorite\"));","import React from 'react'\r\nimport UIIcon from '../UIComponents/UIIcon'\r\nimport AppContextHOC from \"../HOC/AppContextHOC\";\r\nimport AddMovieToListHOC from \"../HOC/AddMovieToListHOC\"\r\n\r\n\r\nconst WatchList = ({ isAdded, addFavorite }) => {\r\n        return(\r\n            <UIIcon\r\n                iconName={\"bookmark\"}\r\n                onClick={addFavorite}\r\n                isAdded={isAdded}\r\n                />\r\n        );  \r\n}\r\n\r\n\r\n\r\nexport default AppContextHOC(AddMovieToListHOC(WatchList, \"watchList\", \"watchlist\"));","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Favorites from \"./Favorites\";\nimport WatchList from \"./WatchList\";\n\n\nexport default class MovieItem extends React.Component {\n  render() {\n    const { item } = this.props;\n    return (\n      <div className=\"card\" style={{ width: \"100%\" }}>\n        <img\n          className=\"card-img-top card-img--height\"\n          src={`https://image.tmdb.org/t/p/w500${item.backdrop_path ||\n            item.poster_path}`}\n          alt=\"\"\n        />\n        <div className=\"card-body\">\n          <Link className=\"card-title\" to={`/movie/${item.id}`}>{item.title}</Link>\n          <div>Рейтинг: {item.vote_average}</div>\n          <Favorites className=\"favorite\" item={item} />\n          <WatchList item={item}/>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MovieItem from \"./MovieItem\";\nimport MoviesHOC from \"../HOC/MoviesHOC\";\n\nconst MoviesList = ({movies}) => {\n  return (\n    <div className=\"row\">\n        {movies.map(movie => {\n          return (\n            <div key={movie.id} className=\"col-6 mb-4\">\n              <MovieItem item={movie} />\n            </div>\n          );\n        })}\n      </div>\n  )\n}\n\n\nMoviesList.defaultProps = {\n  movies: []\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired\n}\n\nexport default MoviesHOC(MoviesList);","import React from \"react\";\r\nimport CallApi from \"../../api/api\";\r\n\r\n\r\nexport default Component => class MoviesHOC extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      movies: []\r\n    };\r\n  }\r\n\r\n  getMovies = (filters, page) => {\r\n    const { sort_by, primary_release_year, with_genres } = filters;\r\n    const queryStringParams = {\r\n      language: \"ru-RU\",\r\n      sort_by: sort_by,\r\n      page: page,\r\n      primary_release_year: primary_release_year\r\n    };\r\n\r\n    if (with_genres.length > 0){\r\n      queryStringParams.with_genres = with_genres.join(\",\")\r\n    };\r\n\r\n    CallApi.get(\"/discover/movie\", {\r\n      params: queryStringParams\r\n    })\r\n      .then(data => {\r\n        this.setState({\r\n          movies: data.results\r\n        });\r\n        this.props.getTotalPages(data.total_pages);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMovies(this.props.filters, this.props.page);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.filters.sort_by !== prevProps.filters.sort_by) {\r\n      this.getMovies(this.props.filters, 1);\r\n      this.props.onChangePage(1);\r\n    }\r\n    if (\r\n      this.props.filters.primary_release_year !==\r\n      prevProps.filters.primary_release_year\r\n    ) {\r\n      this.getMovies(this.props.filters, 1);\r\n      this.props.onChangePage(1);\r\n    }\r\n    if (this.props.filters.with_genres !== prevProps.filters.with_genres) {\r\n      this.getMovies(this.props.filters, 1);\r\n      this.props.onChangePage(1);\r\n    }\r\n    if (this.props.page !== prevProps.page) {\r\n      this.getMovies(this.props.filters, this.props.page);\r\n    }\r\n  }\r\n\r\n  // componentWillReceiveProps(nextProps){\r\n  //     //console.log('props', this.props, 'nextProps', nextProps);\r\n  //     if(this.props.filters.sort_by !== nextProps.filters.sort_by){\r\n  //         // const { filters: { sort_by } } = nextProps;\r\n  //         // const link = `${API_URL}/discover/movie?api_key=${API_KEY_3}&language=ru-RU&sort_by=${sort_by}`;\r\n  //         // fetch(link)\r\n  //         //   .then(response => {\r\n  //         //       return response.json();\r\n  //         //   })\r\n  //         //   .then(data => {\r\n  //         //       this.setState({\r\n  //         //           movies: data.results\r\n  //         //       });\r\n  //         //   });\r\n  //         this.getMovies(nextProps.filters);\r\n  //     }\r\n  // }\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    //console.log(\"render\");\r\n    console.log(Component);\r\n    return <Component movies={movies} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Filters from \"../../Filters/Filters\";\r\nimport MoviesList from \"../../Movies/MoviesList\";\r\n\r\n\r\nexport default class MoviesPage extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            filters: {\r\n                sort_by: 'popularity.desc',\r\n                primary_release_year: '',\r\n                with_genres: []\r\n            },\r\n            page: 1,\r\n            total_pages: \"\",\r\n        }\r\n    };\r\n\r\n    onChangeFilters = event => {\r\n        const value = event.target.value;\r\n        const name = event.target.name;\r\n        this.setState(prevState => ({\r\n          filters: {\r\n            ...prevState.filters,\r\n            [name]: value\r\n          }\r\n        }));\r\n      };\r\n\r\n    onChangePage = page =>{\r\n        this.setState({\r\n            page\r\n        })\r\n    };\r\n\r\n\r\n    getTotalPages = total_pages =>{\r\n        this.setState({\r\n            total_pages\r\n        })\r\n    };\r\n\r\n    onClearFilters = event => {\r\n        this.setState({\r\n            filters: {\r\n                sort_by: 'popularity.desc',\r\n                primary_release_year: '2018',\r\n                with_genres: []\r\n            },\r\n            page: 1\r\n        })\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { filters, page, total_pages } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"col-4\">\r\n                        <div className=\"card\" style={{ width: \"100%\" }}>\r\n                            <div className=\"card-body\">\r\n                                <h3>Фильтры:</h3>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <button className=\"btn btn-light\" onClick = {this.onClearFilters}>\r\n                                        Очистить\r\n                                    </button>\r\n                                </div>\r\n                                <Filters\r\n                                    filters = {filters}\r\n                                    onChangeFilters = {this.onChangeFilters}\r\n                                    page = {page}\r\n                                    onChangePage = {this.onChangePage}\r\n                                    total_pages = {total_pages}\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <MoviesList\r\n                            filters = {filters}\r\n                            page = {page}\r\n                            onChangePage = {this.onChangePage}\r\n                            getTotalPages = {this.getTotalPages}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n        }\r\n    }\r\n","import React from \"react\";\r\nimport Favorites from \"../Favorites\";\r\nimport WatchList from \"../WatchList\"\r\n\r\n\r\nexport default class MovieInfo extends React.Component {\r\n\r\n\r\n    render(){\r\n        const { backdrop_path, poster_path, title, overview } = this.props.movie;\r\n        const item = this.props.movie;\r\n        return (\r\n            <div style={{\r\n                background: `url(https://image.tmdb.org/t/p/w600_and_h900_bestv2${backdrop_path}) no-repeat 50%/cover`\r\n                }}\r\n                className=\"movie-info\">\r\n                <div className=\"movie-container\">\r\n                    <div className=\"movie-page\">\r\n                        <div className=\"col-4 movie-image\">\r\n                            <img\r\n                                className=\"card-img-top\"\r\n                                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\r\n                                style={{\"width\": \"300px\"}}\r\n                                alt=\"\"\r\n                                />\r\n                        </div>\r\n                        <div className=\"col-8 movie-text\">\r\n                            <div className=\"card-text\">{title}</div>\r\n                            <div className=\"card-text\">{overview}</div>\r\n                            <Favorites item={item} />\r\n                            <WatchList item={item}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Nav, NavItem, NavLink as TabNavLink } from 'reactstrap';\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\n\r\nexport default class MovieTab extends React.Component {\r\n\r\n    render(){\r\n        const { movie } = this.props;\r\n        return (\r\n            <div className=\"container\">\r\n                <Nav tabs>\r\n                    <NavItem>\r\n                        <TabNavLink>\r\n                            <NavLink\r\n                                to={`/movie/${movie.id}/detail`}\r\n                                >\r\n                                Movie Detail\r\n                            </NavLink>\r\n                        </TabNavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <TabNavLink>\r\n                            <NavLink\r\n                                to={`/movie/${movie.id}/videos`}\r\n                                >\r\n                                Videos\r\n                            </NavLink>\r\n                        </TabNavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <TabNavLink>\r\n                            <NavLink\r\n                                to={`/movie/${movie.id}/credits`}\r\n                                >\r\n                                Credits\r\n                            </NavLink>\r\n                        </TabNavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                \r\n          </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Table, Badge } from 'reactstrap';\r\n\r\nexport default class MovieDetail extends React.Component {\r\n\r\n\r\n    render(){\r\n        const { original_title, \r\n                production_companies,\r\n                production_countries, \r\n                status, \r\n                budget, \r\n                release_data,\r\n                original_language,\r\n                revenue,\r\n                genres } = this.props.movie;\r\n        return (\r\n            <Table className=\"container\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Оригинальное название</td>\r\n                        <td>{original_title}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Статус</td>\r\n                        <td>{status}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Дата выхода</td>\r\n                        <td>{release_data}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Бюджет</td>\r\n                        <td>{`$${budget}`}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Язык оригинала</td>\r\n                        <td>{original_language}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Страна</td>\r\n                        <td>{production_countries && \r\n                            production_countries.map(\r\n                                country => `${country.name}`\r\n                            )}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Сборы</td>\r\n                        <td>{`$${revenue}`}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Компания</td>\r\n                        <td>{production_companies && \r\n                            production_companies.map(company => {\r\n                                return(\r\n                                    <div key={company.id}>\r\n                                        <Badge color=\"info\">{company.name}</Badge>\r\n                                        <br/>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            )}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Жанры</td>\r\n                        <td>{genres && \r\n                            genres.map(genre => {\r\n                                return(\r\n                                    <div key={genre.id}>\r\n                                        <Badge color=\"info\">{genre.name}</Badge>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            )}</td>\r\n                    </tr>\r\n                </tbody>\r\n          </Table>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport CallApi from \"../../../api/api\";\r\nimport { Media } from \"reactstrap\";\r\n\r\nexport default class MovieVideos extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            movieVideos: []\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        const movie_id = this.props.match.params.id;\r\n        CallApi.get(`/movie/${movie_id}/videos`, {\r\n            params: {\r\n                language: \"ru-RU\"\r\n            }\r\n        })\r\n        .then(data => {\r\n            this.setState({\r\n                movieVideos: data.results\r\n            });\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { movieVideos } = this.state;\r\n        return (\r\n            <div className=\"container pt-2\">\r\n                {movieVideos.map(video => (\r\n                    <Media key={video.id}>\r\n                        <Media left href=\"#\" className=\"mr-4\">\r\n                            <iframe\r\n                                title={video.id}\r\n                                width=\"560\"\r\n                                height=\"315\"\r\n                                src={`https://www.youtube-nocookie.com/embed/${video.key}`}\r\n                                frameBorder=\"0\"\r\n                                allowFullScreen\r\n                                />\r\n                        </Media>\r\n                        <Media body>\r\n                            <Media heading>\r\n                                {video.name}\r\n                            </Media>\r\n                            Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin commodo. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\r\n                        </Media>\r\n                    </Media>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport CallApi from \"../../../api/api\";\r\n\r\nexport default class MovieCredits extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            movieCredits: []\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        const movie_id = this.props.match.params.id;\r\n        CallApi.get(`/movie/${movie_id}/credits`, {\r\n            params: {\r\n                language: \"ru-RU\"\r\n            }\r\n        })\r\n        .then(data => {\r\n            this.setState({\r\n                movieCredits: data.cast\r\n            });\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { movieCredits } = this.state;\r\n        return (\r\n            <div className=\"container pt-2\">\r\n                {movieCredits.map(credit => (\r\n                    <img\r\n                        key={credit.id}\r\n                        className=\"card-img\"\r\n                        src={`https://image.tmdb.org/t/p/w500${credit.profile_path}`}\r\n                        style={{ width: \"180px\", height: \"270px\", margin: \"1px\" }}\r\n                        alt=\"\"\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport CallApi from '../../../api/api';\r\nimport MovieInfo from \"../../Movies/Movie/MovieInfo\";\r\nimport MovieTab from \"../../Movies/Movie/MovieTab\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport MovieDetail from \"../../Movies/Movie/MovieDetail\";\r\nimport MovieVideos from \"../../Movies/Movie/MovieVideos\";\r\nimport MovieCredits from \"../../Movies/Movie/MovieCredits\";\r\n\r\n\r\n\r\nexport default class MoviePage extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            movie: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        const movie_id = this.props.match.params.id;\r\n        CallApi.get(`/movie/${movie_id}`, {\r\n            params: {\r\n                language: \"ru-RU\"\r\n            }\r\n        })\r\n        .then(data => {\r\n            this.setState({\r\n                movie: data\r\n            });\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { movie } = this.state;\r\n        return (\r\n            <div>\r\n                <MovieInfo movie={movie}/>\r\n                <MovieTab movie={movie}/>  \r\n                <Switch>\r\n                    <Route exact path=\"/movie/:id/detail\" render={propsRouter => (\r\n                        <MovieDetail {...propsRouter} movie={movie}/>\r\n                    )}/>\r\n                    <Route path=\"/movie/:id/videos\" component={MovieVideos}/>\r\n                    <Route path=\"/movie/:id/credits\" component={MovieCredits}/>\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\nimport Header from \"./Header/Header\";\nimport CallApi, { API_URL, API_KEY_3, fetchApi } from '../api/api';\n\nimport Cookies from 'universal-cookie';\n\nimport MoviesPage from \"./pages/MoviesPage/MoviesPage\"\nimport MoviePage from \"./pages/MoviePage/MoviePage\"\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { far } from \"@fortawesome/free-regular-svg-icons\";\n\nimport LoginForm from \"./Header/Login/LoginForm\"\nimport { Modal, ModalBody } from 'reactstrap';\n\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nconst cookies = new Cookies();\n\nexport const AppContext = React.createContext();\n\nlibrary.add(fas, far);\n\n\nexport default class App extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            user: null,\n            session_id: \"\",\n            showLoginModal: false,\n            favoriteMovies: [],\n            watchList: []\n        }\n    };\n\n    updateUser = user => {\n        this.setState({\n            user\n        })\n    }\n\n    updateSessionId = session_id => {\n        cookies.set(\"session_id\", session_id,\n            {\n                path: '/',\n                maxAge: 2592000\n                });\n        this.setState({\n            session_id\n        })\n    }\n\n\n    onLogOut = () => {\n        cookies.remove(\"session_id\");\n        this.setState({\n            user: null,\n            session_id: null\n        });\n    }\n\n    componentDidMount(){\n        const session_id = cookies.get(\"session_id\");\n        if(session_id){\n            fetchApi(`${API_URL}/account?api_key=${API_KEY_3}&session_id=${session_id}`)\n            .then(user => {\n                this.updateUser(user);\n                this.updateSessionId(session_id);\n                this.getFavoriteMovies();\n            })\n        }\n\n    }\n\n    getFavoriteMovies = () => {\n        const { session_id, user } = this.state;\n        CallApi.get(`/account/${user.id}/favorite/movies`, {\n            params: {\n                session_id: session_id,\n                language: \"ru-RU\"\n            }\n        })\n        .then(data => {\n            const favMoviesID = [];\n            data.results.map(movie => {\n              favMoviesID.push(movie.id);\n            });\n            this.setState({\n              favoriteMovies: [...favMoviesID]\n            });\n            return CallApi.get(`/account/${user.id}/watchlist/movies`, {\n                params: {\n                    session_id: session_id,\n                    language: \"ru-RU\"\n                }\n            })\n            .then(data => {\n                const watchMoviesID = [];\n                data.results.map(movie => {\n                    watchMoviesID.push(movie.id);\n                });\n                this.setState({\n                    watchList: [...watchMoviesID]\n                });\n            })\n        })\n    }\n\n\n    showToggleModal = () => {\n        this.setState(prevState => ({\n            ...prevState,\n            showLoginModal: !prevState.showLoginModal\n          }));\n    }\n\n\n\n\n    render() {\n        const { user, session_id, favoriteMovies, watchList, showLoginModal } = this.state;\n        return (\n            <BrowserRouter>\n                <AppContext.Provider \n                    value={{\n                        user,\n                        updateUser: this.updateUser,\n                        session_id,\n                        updateSessionId: this.updateSessionId,\n                        onLogOut: this.onLogOut,\n                        showToggleModal: this.showToggleModal,\n                        getFavoriteMovies: this.getFavoriteMovies,\n                        favoriteMovies,\n                        watchList\n                        }}\n                >\n                    <div>\n                        <Modal isOpen={showLoginModal} toggle={this.showToggleModal}>\n                            <ModalBody>\n                                <LoginForm />\n                            </ModalBody>\n                        </Modal>\n                        <Header user={user} updateUser={this.updateUser} updateSessionId={this.updateSessionId}/>\n                        <Route exact path=\"/\" component={MoviesPage}/>\n                        <Route path=\"/movie/:id\" component={MoviePage}/>\n                    </div>\n                </AppContext.Provider>\n            </BrowserRouter>   \n        );\n      }\n    }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./stylesheets/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}